<?php

/**
 * Implementation of hook_odk_menu().
 */
function feeds_odk_menu() {
  $items = array();
  $items['feeds/%/submission'] = array(
    'page callback' => 'feeds_odk_submit',
    'page arguments' => array(1),
    'access callback' => 'user_access',
    'access arguments' => array('odk submit forms'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implementation of hook_perm().
 */
function feeds_odk_perm() {
  return array('odk submit forms');
}

/**
 * Implementation of hook_ctools_plugin_api().
 */
function feeds_odk_ctools_plugin_api($owner, $api) {
  if ($owner == 'feeds' && $api == 'plugins') {
    return array('version' => 1);
  }
}

/**
 * Implementation of hook_feeds_plugins().
 */
function feeds_odk_feeds_plugins() {
  $info = array();
  $info['FeedsODKFetcher'] = array(
    'name' => 'ODK fetcher',
    'description' => 'Receive an ODK submission.',
    'handler' => array(
      'parent' => 'FeedsFetcher',
      'class' => 'FeedsODKFetcher',
      'file' => 'FeedsODKFetcher.inc',
      'path' => drupal_get_path('module', 'feeds_odk'),
    ),
  );
  $info['FeedsODKParser'] = array(
    'name' => 'ODK parser',
    'description' => 'Parse an ODK submission.',
    'handler' => array(
      'parent' => 'FeedsParser',
      'class' => 'FeedsODKParser',
      'file' => 'FeedsODKParser.inc',
      'path' => drupal_get_path('module', 'feeds_odk'),
    ),
  );
  return $info;
}


/**
 * Page callback.
 */
function feeds_odk_submit($importer_id) {
  if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (feeds_importer($importer_id)->fetcher instanceOf FeedsODKFetcher) {
      feeds_source($importer_id)->import();
      header('HTTP/1.1 201 "Created"', null, 201);
      header('Content-Location: '. url('', array('absolute' => TRUE)));
      exit();
    }
  }
  drupal_access_denied();
}

/**
 * Debug helper.
 */
function feeds_odk_log($msg) {
  if (!is_string($msg)) {
    $msg = var_export($msg, true);
  }
  $handle = fopen('/tmp/odk.log', 'a');
  fwrite($handle, date('c') ."\t$msg\n");
  fclose($handle);
}
